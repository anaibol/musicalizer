{
  "author": {
    "name": "Chris O'Hara",
    "email": "cohara87@gmail.com"
  },
  "name": "mongoose-rest",
  "description": "Introspection, Backbone models and RESTful routes for Mongoose",
  "homepage": "http://github.com/chriso/mongoose-rest",
  "version": "0.2.7",
  "engines": {
    "node": ">= 0.4.0"
  },
  "bugs": {
    "mail": "cohara87@gmail.com",
    "url": "http://github.com/chriso/mongoose-rest/issues"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/chriso/mongoose-rest.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/chriso/mongoose-rest/raw/master/LICENSE"
    }
  ],
  "dependencies": {
    "lingo": "*"
  },
  "readme": "**mongoose-rest** - Generate RESTful, resource-based routes for your Mongoose models.\n\n```bash\n$ npm install mongoose-rest\n```\n\n## Usage\n\n```javascript\nvar mongoose = require('mongoose')\n  , app = require('express').createServer()\n  , rest = require('mongoose-rest');\n\n//Define your schemas\n\nrest.use(mongoose);\nrest.createRoutes(app, config);\n```\n\nThis will add two types of routes depending on your document structure\n\n**Top level routes**\n\n```\nMethod  Route                     Action\nGET     /<resource>.:format?      index\nPOST    /<resource>               create\nGET     /<resource>/:id.:format?  read\nPUT     /<resource>/:id           update\nDELETE  /<resource>/:id           delete\n```\n\n**Embedded routes**\n\n```\nMethod  Route                                         Action\nGET     /<parent>/:parent_id/<resource>.:format?      index\nPOST    /<parent>/:parent_id/<resource>               create\nGET     /<parent>/:parent_id/<resource>/:id.:format?  read\nPUT     /<parent>/:parent_id/<resource>/:id           update\nDELETE  /<parent>/:parent_id/<resource>/:id           delete\n```\n\n*Note: Currently only one level of embedded documents is supported.*\n\n## Access Control\n\nIf a static `acl()` method is defined on the schema, each route will pass through it\n\n```\nPost.acl(user, action, post, allowed) {\n    //Only logged in users may see posts\n    if (!user) allowed(false);\n\n    //Only the posting user may update or delete the post\n    if (action == 'update' || action == 'delete') {\n        allowed(post.get('user') == user.get('id'));\n    }\n});\n```\n\n## Search\n\nThe *index* action uses the static `search()` method if it's defined on\nthe schema, otherwise it defaults to `find()`.\n\nTODO\n\n## Slugs\n\nTODO\n\n## Backbone models\n\nThis is an experimental feature.\n\n```javascript\nrest.generateBackboneFile('/path/to/output.js', namespace);\n```\n\nThen serve the `.js` file as normal.\n\n## License\n\nCopyright (c) 2011 Chris O'Hara <cohara87@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n",
  "_id": "mongoose-rest@0.2.7",
  "_from": "mongoose-rest"
}
