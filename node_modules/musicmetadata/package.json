{
  "name": "musicmetadata",
  "description": "Music metadata library for node, using pure Javascript.",
  "version": "0.2.0",
  "author": {
    "name": "Lee Treveil"
  },
  "dependencies": {
    "strtok": "0.1.1"
  },
  "main": "lib",
  "scripts": {
    "test": "node test/alltests.js"
  },
  "devDependencies": {
    "testy": "0.0.5"
  },
  "engines": {
    "node": "*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/leetreveil/node-musicmetadata.git"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/leetreveil/node-musicmetadata.png)](http://travis-ci.org/leetreveil/node-musicmetadata)\n\nInstallation\n------------\nInstall via npm:\n\n```\nnpm install musicmetadata\n```\n\n\nSupports\n-----------------\nmp3 (1.1, 2.2, 2.3, 2.4), m4a(mp4), vorbis (ogg, flac)\n\n\nAPI\n-----------------\n```javascript\nvar fs = require('fs'),\n    musicmetadata = require('musicmetadata');\n\n//create a new parser from a node ReadStream\nvar parser = new musicmetadata(fs.createReadStream('sample.mp3'));\n\n//listen for the metadata event\nparser.on('metadata', function(result) {\n  console.log(result);\n});\n```\n\n\nThis will output the standard music metadata:\n\n```javascript\n{ artist : 'Spor',\n  album : 'Nightlife, Vol 5.',\n  albumartist : [ 'Andy C', 'Spor' ],\n  title : 'Stronger',\n  year : '2010',\n  track : { no : 1, of : 44 },\n  disk : { no : 1, of : 2 },\n  picture : [ { format : 'jpg', data : <Buffer> } ]\n}\n```\n        \nIf you just want the artist - listen for the artist event:\n\n```javascript\nparser.on('artist', function(result) {\n  console.log(result);\n});\n```\n\nYou can also listen for custom metadata types that are not part of the standard metadata as defined above. For example if you wanted to read the TLEN frame from a id3v2.x file you can do this:\n\n```javascript\nparser.on('TLEN', function(result) {\n  console.log(result);\n});\n```\n    \nThe ```done``` event will be raised when parsing has finished or an error has occurred. This could be\nused to disconnect from the stream as soon as parsing has finished, saving bandwidth.\n\n```javascript\nparser.on('done', function(err) {\n  if (err) throw err;\t\n  stream.destroy();\n});\n```\n    \n\n## Changelog\n\n### v0.1.2\n\n* Fixed id3v1.1 implementation\n* Implemented multiple artwork support (id4)\n* Added flac support\n\n[Commits](https://github.com/leetreveil/node-musicmetadata/compare/0.1.1...0.1.2)\n\n### v0.1.1\n\n* Better utf-16 handling\n* Now reads iso-8859-1 encoded id3 frames correctly\n* Artwork is now part of the 'metadata' event\n\n[Commits](https://github.com/leetreveil/node-musicmetadata/compare/0.1.0...0.1.1)",
  "readmeFilename": "README.md",
  "_id": "musicmetadata@0.2.0",
  "dist": {
    "shasum": "7e6850a7276e56c7f2731ace6c198fa9df4847a9"
  },
  "_from": "musicmetadata@",
  "_resolved": "https://registry.npmjs.org/musicmetadata/-/musicmetadata-0.2.0.tgz"
}
